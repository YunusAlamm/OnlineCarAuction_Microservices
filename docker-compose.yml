services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5  
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    healthcheck:
      test:
       [
        "CMD",
        "mongosh",
        "--quiet",
        "127.0.0.1/test",
        "--eval",
        "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
       ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5

  auction-svc:
    image : yunusalamm/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=Auctions;User Id=postgres;Password=postgrespw;
      - RabbitMq__Host=rabbitmq
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
       postgres :
        condition : service_healthy
       rabbitmq:
        condition : service_healthy
     

  search-svc:
    image : yunusalamm/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__MongoDBConnection=mongodb://root:mongopw@mongodb
      - RabbitMq__Host=rabbitmq
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy



  identity-svc:
    image : yunusalamm/identity-svc:latest        
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=Identity;User Id=postgres;Password=postgrespw;
    ports:
      - 5001:80
    depends_on:
      postgres:
        condition: service_healthy



  gateway-svc:
    image: yunusalamm/gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GateWayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  bid-svc:
    image : yunusalamm/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__BidDbConnetion=mongodb://root:mongopw@mongodb
      - RabbitMq__Host=rabbitmq
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy      

  notify-svc:
    image : yunusalamm/notify-svc:latest
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      rabbitmq:
        condition: service_healthy
  web-app:
    image: yunusalamm/web-app:latest
    build:
      context: .
      dockerfile: frontend/web-app/Dockerfile
    volumes:
      - /var/lib/web/data
    ports:
      - 3000:3000
    environment:
      - AUTH_SECRET="a3ptAS/PWfkLHK9C8Hpy9m2d60orGJSlOVN8BS4muJs="
      - API_URL=http://gateway-svc/
      - ID_URL=http://localhost:5001
      - AUTH_URL=http://localhost:3000              
      - AUTH_URL_INTERNAL=http://web-app:3000              


volumes:
  pgdata:
  mongodata:
          